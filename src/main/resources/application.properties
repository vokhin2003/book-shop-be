spring.application.name=bookshop

spring.bookshop.logo=https://res.cloudinary.com/dtfe2e0ey/image/upload/v1748637153/logo_igayak.png

# PostgreSQL Datasource Configuration
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# HikariCP Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=${DB_POOL_MAX_SIZE:20}
spring.datasource.hikari.minimum-idle=${DB_POOL_MIN_IDLE:5}
spring.datasource.hikari.connection-timeout=${DB_POOL_CONNECTION_TIMEOUT:30000}
spring.datasource.hikari.idle-timeout=${DB_POOL_IDLE_TIMEOUT:600000}
spring.datasource.hikari.max-lifetime=${DB_POOL_MAX_LIFETIME:1800000}
spring.datasource.hikari.pool-name=BookshopHikariPool

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# SendGrid
spring.sendgrid.api-key=${SENDGRID_API_KEY}
spring.sendgrid.mail-from=${SENDGRID_MAIL_FROM}
spring.sendgrid.template-verify.id=${SENDGRID_TEMPLATE_VERIFY}
spring.sendgrid.template-forgot-pwd.id=${SENDGRID_TEMPLATE_FORGOT}
spring.sendgrid.template-id.verification=${SENDGRID_TEMPLATE_VERIFY}
spring.sendgrid.template-id.order=${SENDGRID_TEMPLATE_ORDDER}

spring.sendgrid.verify-api=http://localhost:8080/api/v1/auth/verify-email
spring.sendgrid.verify-redirect-link=bromel.free.nf/redirect.html
spring.sendgrid.verify.logo=https://res.cloudinary.com/dtfe2e0ey/image/upload/v1744883424/logo_u538kh.png

# Cloudinary
cloudinary.cloud-name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api-key=${CLOUDINARY_API_KEY}
cloudinary.api-secret=${CLOUDINARY_API_SECRET}

###
#config jwt

rober.jwt.base64-secret=${JWT_BASE64_SECRET}
# Access Token: 1 hour (3600 seconds)
rober.jwt.access-token-validity-in-seconds=3600
# Refresh Token: 7 days (604800 seconds)
rober.jwt.refresh-token-validity-in-seconds=604800

#
###

#config upload file
###
#default = 1MB
spring.servlet.multipart.max-file-size=50MB

#default = 10MB (form data)
spring.servlet.multipart.max-request-size=50MB

###
# Pagination Configuration
#start page = 1
spring.data.web.pageable.one-indexed-parameters=true

###

# VNPay Configuration
rober.vnpay.vnp-tmn-code=${VNP_TMP_CODE}
rober.vnpay.vnp-hash-secret=${VNP_HASH_SECRET}
rober.vnpay.url=https://sandbox.vnpayment.vn/paymentv2/vpcpay.html
rober.vnpay.return-url=http://localhost:8080/api/v1/payments/vnpay-payment-return

rober.vnpay.app.return-url=:8080/api/v1/payments/vnpay-payment-return
rober.server.ip=${SERVER_IP:localhost}

# CORS Configuration
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:4173,http://localhost:5173}

# Error Handling Configuration
app.error.show-details=${SHOW_ERROR_DETAILS:false}

# Rate Limiting Configuration
app.rate-limit.auth.max-attempts=${RATE_LIMIT_MAX_ATTEMPTS:5}
app.rate-limit.auth.window-minutes=${RATE_LIMIT_WINDOW_MINUTES:15}

# Swagger Configuration
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.api-docs.path=/v3/api-docs
springdoc.packagesToScan=com.rober.bookshop.controller
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.filter=false

# Firebase Configuration
app.firebase-config=bookshop-595a4-firebase-adminsdk-fbsvc-0089e67b13.json

# Google OAuth Configuration
outbound.identity.client-id=${GOOGLE_CLIENT_ID}
outbound.identity.client-secret=${GOOGLE_CLIENT_SECRET}
outbound.identity.redirect-uri=${GOOGLE_REDIRECT_URI}

# Spring Mail Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true